{"version":3,"sources":["components/MultiTextInput.tsx","components/AddRestaurantDialog.tsx","components/maps/Maps.tsx","components/NumberInput.tsx","components/maps/MapPin.tsx","components/Dashboard.tsx","App.tsx","index.tsx"],"names":["StyledLabel","styled","Typography","color","invalid","MultiTextInput","props","hasError","className","name","onBlur","label","helpText","changeOptionLabel","changeOptionValue","rest","useState","isFocused","setIsFocused","use","styles","valueContainer","minHeight","control","state","marginRight","marginLeft","borderColor","boxShadow","menuIsOpen","placeholder","menuPortal","zIndex","components","DropdownIndicator","theme","themes","colors","primary","danger","onFocus","e","target","getOptionLabel","option","getOptionValue","StyledFormContainer","div","AddRestaurantDialog","setName","inputValue","setInputValue","specialties","setSpecialties","address","setAddress","placeId","setPlaceId","location","mapsApi","onRegisterRestaurant","onClose","useEffect","a","GeoCoder","maps","Geocoder","geocode","lat","lng","results","formatted_address","place_id","geoCodeLocation","value","onChange","outlined","style","margin","isClearable","isMulti","map","specialty","onInputChange","input","onKeyDown","event","key","preventDefault","action","unelevated","isDefaultAction","onClick","visits","CEBU_COORDINATE","Container","MapContainer","SideNav","NotesContainer","Maps","usePosition","latitude","longitude","setMapApi","restaurants","setRestaurants","restaurantsOnShape","setRestaurantsOnShape","plotMode","setPlotMode","restaurantDialog","setRestaurantDialog","clickedLocation","setClickedLocation","isShowRestaurantLoading","setIsShowRestaurantLoading","drawMode","setDrawMode","PlacesService","setPlacesService","DirectionsService","setDirectionsService","DirectionsRenderer","setDirectionsRenderer","drawingManager","setDrawingManager","showRestaurants","textSearch","query","type","response","status","places","PlacesServiceStatus","OK","forEach","res","push","geometry","showRoute","restaurant","setMap","request","origin","LatLng","destination","travelMode","route","setDirections","addListener","bounds","overlay","getBounds","boundedRestaurants","filter","latLng","circle","contains","spherical","computeDistanceBetween","getCenter","getRadius","isWithinBounds","pins","bootstrapURLKeys","libraries","defaultZoom","center","onGoogleApiLoaded","api","drawing","DrawingManager","drawingMode","OverlayType","CIRCLE","drawingControl","drawingControlOptions","position","ControlPosition","TOP_CENTER","drawingModes","RECTANGLE","apiIsLoaded","yesIWantToUseGoogleMapApiInternals","layerTypes","options","disableDoubleClickZoom","index","MapPin","onDirectionClick","textAlign","flex","paddingRight","paddingLeft","width","disabled","icon","open","DecrementButton","button","Label","span","IncrementButton","NumberInput","onValueChange","currentValue","setCurrentValue","stopPropagation","TextContainer","MenuHeader","VisitContainer","onVisitChange","menu","setMenu","length","join","paddingTop","Dashboard","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6e97de0e.chunk.js","sourcesContent":["import { Typography, TypographyProps } from \"@rmwc/typography\";\nimport { CSSProperties, useState } from \"react\";\nimport CreatableSelect from \"react-select/creatable\";\nimport styled from \"styled-components\";\n\nconst selectStyles = (hasError: boolean) => ({\n  valueContainer: (styles: CSSProperties) => ({\n    ...styles,\n    minHeight: \"55px\",\n  }),\n  control: (styles: CSSProperties, state: any) => ({\n    ...styles,\n    marginRight: 8,\n    marginLeft: 8,\n    ...(hasError && {\n      borderColor: \"red\",\n      boxShadow: state.menuIsOpen ? \"0 0 0 1px red inset\" : \"0\",\n    }),\n    \"&:hover\": {\n      borderColor: hasError\n        ? \"red\"\n        : state.isFocused\n        ? styles.borderColor\n        : \"#000000\",\n    },\n  }),\n  placeholder: (styles: CSSProperties) => ({\n    ...styles,\n    color: hasError ? \"red\" : \"#808080\",\n  }),\n  menuPortal: (styles: CSSProperties) => ({\n    ...styles,\n    zIndex: 10,\n  }),\n});\n\nconst StyledLabel = styled(Typography)<\n  TypographyProps & { color: string; invalid?: boolean }\n>`\n  ${({ color, invalid }) => `\n    margin-left: 16px;\n    display: inline-block;\n    color: ${invalid ? \"red\" : color};\n  `}\n` as React.FC<TypographyProps & { color: string; invalid?: boolean }>;\n\nfunction MultiTextInput(props: any) {\n  const {\n    className,\n    name,\n    onBlur,\n    label,\n    invalid,\n    helpText,\n    changeOptionLabel,\n    changeOptionValue,\n    ...rest\n  } = props;\n  const [isFocused, setIsFocused] = useState<boolean>(false);\n\n  return (\n    <div className={className}>\n      {label && (\n        <StyledLabel\n          use=\"caption\"\n          color={isFocused ? \"#6200ee\" : \"#7f7f7f\"}\n          invalid={invalid}\n        >\n          {label}\n        </StyledLabel>\n      )}\n      <CreatableSelect\n        styles={selectStyles(invalid)}\n        components={{\n          DropdownIndicator: null,\n        }}\n        menuIsOpen={false}\n        theme={(themes) => ({\n          ...themes,\n          colors: {\n            ...themes.colors,\n            primary: \"#6200ee\",\n            danger: \"#b00020\",\n          },\n        })}\n        onFocus={() => setIsFocused(true)}\n        onBlur={(e: any) => {\n          e.target.name = name;\n          if (onBlur) {\n            onBlur(e);\n          }\n          setIsFocused(false);\n        }}\n        getOptionLabel={(option: any) => option[changeOptionLabel]}\n        getOptionValue={(option: any) => option[changeOptionValue]}\n        {...rest}\n      />\n      <StyledLabel use=\"caption\" color={\"#7f7f7f\"} invalid={invalid}>\n        {helpText || \"\"}\n      </StyledLabel>\n    </div>\n  );\n}\n\nexport default MultiTextInput;\n","import { ClickEventValue } from \"google-map-react\";\nimport { useEffect, useState } from \"react\";\nimport {\n  Dialog,\n  DialogActions,\n  DialogButton,\n  DialogContent,\n  DialogProps,\n  DialogTitle,\n  TextField,\n} from \"rmwc\";\nimport styled from \"styled-components\";\nimport { Restaurant } from \"../types\";\nimport MultiTextInput from \"./MultiTextInput\";\n\ntype AddRestaurantDialogProps = {\n  location?: ClickEventValue | null;\n  mapsApi?: {\n    map: any;\n    maps: any;\n    ref: Element | null;\n  } | null;\n  onRegisterRestaurant: (restaurant: Restaurant) => void;\n} & DialogProps;\n\nconst StyledFormContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport default function AddRestaurantDialog(props: AddRestaurantDialogProps) {\n  const [name, setName] = useState<string>(\"\");\n  const [inputValue, setInputValue] = useState<string>(\"\");\n  const [specialties, setSpecialties] = useState<string[]>([]);\n  const [address, setAddress] = useState<string>(\"\");\n  const [placeId, setPlaceId] = useState<string>(\"\");\n  const { location, mapsApi, onRegisterRestaurant, onClose, ...rest } = props;\n\n  useEffect(() => {\n    async function geoCodeLocation() {\n      if (mapsApi && location) {\n        const GeoCoder = new mapsApi.maps.Geocoder();\n        const { results } = await GeoCoder.geocode({\n          location: {\n            lat: location?.lat,\n            lng: location?.lng,\n          },\n        });\n\n        setAddress(results[0].formatted_address);\n        setPlaceId(results[0].place_id);\n      }\n    }\n\n    geoCodeLocation();\n  }, [location, location?.lat, location?.lng, mapsApi]);\n\n  return (\n    <>\n      <Dialog\n        onClose={(e: any) => {\n          setName(\"\");\n          setSpecialties([]);\n          setAddress(\"\");\n          onClose && onClose(e);\n        }}\n        {...rest}\n      >\n        <DialogTitle>Register Restaurant</DialogTitle>\n        <DialogContent>\n          <StyledFormContainer>\n            <TextField\n              name=\"name\"\n              label=\"Name\"\n              value={name}\n              onChange={(e: any) => setName(e.target.value)}\n              outlined\n              style={{ margin: 8 }}\n            />\n            <MultiTextInput\n              isClearable\n              isMulti\n              label=\"Specialties\"\n              placeholder='Type here then press \"tab\" key to register specialty'\n              inputValue={inputValue}\n              value={specialties.map((specialty) => ({\n                value: specialty,\n                label: specialty,\n              }))}\n              onChange={(e: string[]) => setSpecialties(e)}\n              onInputChange={(input: string) => {\n                setInputValue(input);\n              }}\n              onKeyDown={(event: any) => {\n                if (!inputValue) return;\n                switch (event.key) {\n                  case \"Tab\":\n                    setInputValue(\"\");\n                    setSpecialties([...specialties, inputValue]);\n                    event.preventDefault();\n                }\n              }}\n              changeOptionLabel=\"label\"\n              changeOptionValue=\"value\"\n            />\n            <p>\n              <span>\n                <strong>Address: </strong> {address}\n              </span>\n              <br />\n            </p>\n          </StyledFormContainer>\n        </DialogContent>\n        <DialogActions>\n          <DialogButton action=\"close\">Cancel</DialogButton>\n          <DialogButton\n            action=\"accept\"\n            unelevated\n            isDefaultAction\n            onClick={() => {\n              onRegisterRestaurant({\n                name,\n                specialties,\n                address,\n                location,\n                visits: 0,\n                placeId,\n              });\n            }}\n          >\n            Register\n          </DialogButton>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport GoogleMapReact from \"google-map-react\";\nimport styled from \"styled-components\";\nimport { usePosition } from \"use-position\";\nimport { Button, CircularProgress, Typography } from \"rmwc\";\nimport { Restaurant } from \"../../types\";\nimport { MapPin } from \".\";\nimport AddRestaurantDialog from \"../AddRestaurantDialog\";\n\nconst API_KEY = \"AIzaSyCrWA0GMWAD5vVLl1z6fmwlNgQoTINGm34\";\n\nconst CEBU_COORDINATE = {\n  lat: 10.3005178,\n  lng: 123.8861904,\n};\n\ntype GoogleMapsApiType = {\n  map: any;\n  maps: any;\n  ref: Element | null;\n};\n\ntype MapsProps = {\n  className?: string;\n};\n\nconst Container = styled.div`\n  display: flex;\n  height: 100vh;\n`;\n\nconst MapContainer = styled.div`\n  height: 100%;\n  width: 100%;\n`;\n\nconst SideNav = styled.div`\n  width: 500px;\n  background: white;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst NotesContainer = styled.div`\n  padding: 16px;\n`;\n\nexport function Maps(props: MapsProps) {\n  const { className } = props;\n  const { latitude, longitude } = usePosition(true);\n  const [mapsApi, setMapApi] = useState<GoogleMapsApiType | null>(null);\n  const [restaurants, setRestaurants] = useState<Restaurant[]>([]);\n  const [restaurantsOnShape, setRestaurantsOnShape] = useState<Restaurant[]>(\n    []\n  );\n  const [plotMode, setPlotMode] = useState<boolean>(false);\n  const [restaurantDialog, setRestaurantDialog] = useState<boolean>(false);\n  const [clickedLocation, setClickedLocation] =\n    useState<GoogleMapReact.ClickEventValue | null>(null);\n  const [isShowRestaurantLoading, setIsShowRestaurantLoading] =\n    useState<boolean>(false);\n  const [drawMode, setDrawMode] = useState<boolean>(false);\n  const [PlacesService, setPlacesService] = useState<any>();\n  const [DirectionsService, setDirectionsService] = useState<any>();\n  const [DirectionsRenderer, setDirectionsRenderer] = useState<any>();\n  const [drawingManager, setDrawingManager] = useState<any>();\n\n  const apiIsLoaded = (api: GoogleMapsApiType) => {\n    setMapApi(api);\n\n    if (api && api.map && api.maps) {\n      const { map, maps } = api;\n\n      // Set PlacesService\n      setPlacesService(new maps.places.PlacesService(map));\n\n      // Set DirectionsService\n      setDirectionsService(new maps.DirectionsService());\n\n      // Set DirectionsRenderer\n      setDirectionsRenderer(new maps.DirectionsRenderer());\n\n      // set DrawingManger\n      setDrawingManager(\n        new maps.drawing.DrawingManager({\n          drawingMode: maps.drawing.OverlayType.CIRCLE,\n          drawingControl: true,\n          drawingControlOptions: {\n            position: maps.ControlPosition.TOP_CENTER,\n            drawingModes: [\n              maps.drawing.OverlayType.CIRCLE,\n              maps.drawing.OverlayType.RECTANGLE,\n            ],\n          },\n        })\n      );\n    }\n  };\n\n  const addRestaurant = (e: GoogleMapReact.ClickEventValue) => {\n    if (plotMode) {\n      setRestaurantDialog(true);\n      setClickedLocation(e);\n    }\n  };\n\n  const showRestaurants = async () => {\n    if (mapsApi && mapsApi.maps && PlacesService) {\n      const { maps } = mapsApi;\n      setIsShowRestaurantLoading(true);\n\n      PlacesService.textSearch(\n        {\n          query: \"Restaurants in Cebu City\",\n          type: \"restaurant\",\n        },\n        function (response: any, status: any) {\n          let results: any[] = [];\n          if (status === maps.places.PlacesServiceStatus.OK) {\n            response.forEach((res: any) => {\n              results.push({\n                ...res,\n                address: res.formatted_address,\n                name: res.name,\n                location: {\n                  lat: res.geometry.location.lat(),\n                  lng: res.geometry.location.lng(),\n                },\n                placeId: res.place_id,\n              });\n            });\n          }\n          setRestaurants([...restaurants, ...results]);\n          setIsShowRestaurantLoading(false);\n        }\n      );\n    }\n  };\n\n  const drawPolygon = () => {\n    setRestaurantsOnShape([]);\n    setPlotMode(false);\n    setDrawMode(!drawMode);\n  };\n\n  const showRoute = (restaurant: Restaurant) => {\n    if (mapsApi && mapsApi.maps && mapsApi.map) {\n      DirectionsRenderer.setMap(mapsApi.map);\n      const origin = new mapsApi.maps.LatLng(latitude, longitude);\n      const destination = new mapsApi.maps.LatLng(\n        restaurant.location.lat,\n        restaurant.location.lng\n      );\n      const travelMode = \"DRIVING\";\n      const request = { origin, destination, travelMode };\n\n      DirectionsService.route(request, function (response: any, status: any) {\n        if (status === \"OK\") {\n          DirectionsRenderer.setDirections(response);\n        }\n      });\n    }\n  };\n\n  useEffect(() => {\n    if (drawingManager && mapsApi && mapsApi.map && mapsApi.maps) {\n      const { map, maps } = mapsApi;\n\n      if (drawMode) {\n        drawingManager.setMap(map);\n        maps.event.addListener(\n          drawingManager,\n          \"overlaycomplete\",\n          function (event: any) {\n            const bounds = event.overlay.getBounds();\n\n            const isWithinBounds = (latLng: any) => {\n              switch (event.type) {\n                case \"circle\": {\n                  const circle = event.overlay;\n                  return (\n                    bounds.contains(latLng) &&\n                    maps.geometry.spherical.computeDistanceBetween(\n                      circle.getCenter(),\n                      latLng\n                    ) <= circle.getRadius()\n                  );\n                }\n\n                case \"rectangle\": {\n                  const rectangle = event.overlay;\n                  return rectangle.getBounds().contains(latLng);\n                }\n              }\n            };\n\n            const boundedRestaurants = restaurants.filter((res) =>\n              isWithinBounds(\n                new mapsApi.maps.LatLng(res.location.lat, res.location.lng)\n              )\n            );\n\n            setRestaurantsOnShape([...boundedRestaurants]);\n\n            // Remove Shape overlay\n            event.overlay.setMap(null);\n          }\n        );\n      } else {\n        drawingManager.setMap(null);\n      }\n    }\n  }, [\n    drawMode,\n    mapsApi,\n    mapsApi?.map,\n    mapsApi?.maps,\n    drawingManager,\n    PlacesService,\n    restaurants,\n  ]);\n\n  const pins = drawMode ? restaurantsOnShape : restaurants;\n\n  return (\n    <Container className={className}>\n      <MapContainer>\n        <GoogleMapReact\n          bootstrapURLKeys={{\n            key: API_KEY,\n            libraries: [\"places\", \"drawing\", \"geometry\"],\n          }}\n          defaultZoom={14}\n          center={\n            (clickedLocation && {\n              lat: clickedLocation.lat,\n              lng: clickedLocation.lng,\n            }) ||\n            CEBU_COORDINATE\n          }\n          onGoogleApiLoaded={(api: GoogleMapsApiType) => apiIsLoaded(api)}\n          yesIWantToUseGoogleMapApiInternals\n          onClick={addRestaurant}\n          layerTypes={[\"TrafficLayer\"]}\n          options={() => ({\n            disableDoubleClickZoom: true,\n          })}\n        >\n          {pins &&\n            pins.map((restaurant: any, index: number) => (\n              <MapPin\n                key={\"restaurant-\" + index}\n                restaurant={restaurant}\n                lat={restaurant.location.lat}\n                lng={restaurant.location.lng}\n                onDirectionClick={showRoute}\n              />\n            ))}\n        </GoogleMapReact>\n      </MapContainer>\n      <SideNav>\n        <Button\n          unelevated={!plotMode}\n          style={{ margin: 8 }}\n          onClick={() => {\n            setRestaurantsOnShape([]);\n            setDrawMode(false);\n            setPlotMode(!plotMode);\n          }}\n        >\n          {plotMode ? \"Turn Off \" : \"\"}Plotting Restaruants\n        </Button>\n        {plotMode && (\n          <Typography use=\"caption\" style={{ textAlign: \"center\" }}>\n            To start plotting a restaurant, click anywhere on the map\n          </Typography>\n        )}\n        <Button\n          unelevated={!drawMode}\n          style={{ margin: 8 }}\n          onClick={drawPolygon}\n        >\n          {!drawMode ? \"Draw Shape\" : \"Toggle off Draw Mode\"}\n        </Button>\n        {drawMode && (\n          <Typography use=\"caption\" style={{ textAlign: \"center\" }}>\n            Draw a shape on the map to reveal previously created restaurants\n          </Typography>\n        )}\n        <div style={{ flex: 1 }}></div>\n        <NotesContainer>\n          <h5>Notes:</h5>\n          <ul>\n            <li>\n              To get directions, click any restaurants, and click the direction\n              icon. <br />\n              You should allow the your browser to access your location first\n              for the Directions to work.\n            </li>\n            <li>\n              There are no configured database for this project so plotted\n              restaurants are not persisted anywhere.\n            </li>\n          </ul>\n        </NotesContainer>\n\n        <div style={{ paddingRight: 8, paddingLeft: 8 }}>\n          <h5>Misc</h5>\n          <Button\n            style={{ width: \"100%\" }}\n            unelevated\n            disabled={isShowRestaurantLoading}\n            onClick={showRestaurants}\n            icon={isShowRestaurantLoading && <CircularProgress />}\n          >\n            Show Restaurants in Cebu\n          </Button>\n          <Button\n            style={{ width: \"100%\" }}\n            onClick={() => {\n              DirectionsRenderer.setMap(null);\n            }}\n          >\n            Clear any existing Directions Overlay\n          </Button>\n        </div>\n      </SideNav>\n      <AddRestaurantDialog\n        open={restaurantDialog}\n        location={clickedLocation}\n        mapsApi={mapsApi}\n        onRegisterRestaurant={(restaurant: Restaurant) => {\n          setRestaurants([...restaurants, restaurant]);\n        }}\n        onClose={() => {\n          setRestaurantDialog(false);\n        }}\n      />\n    </Container>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  display: flex;\n  align-items: stretch;\n`;\n\nconst DecrementButton = styled.button`\n  width: 26px;\n  border-top-left-radius: 4px;\n  border-bottom-left-radius: 4px;\n  border: 0;\n  cursor: pointer;\n  transition: 0.3s ease;\n\n  &:hover {\n    background: #6200ee;\n    color: white;\n  }\n`;\n\nconst Label = styled.span`\n  box-sizing: border-box;\n  flex: 1;\n  padding: 0 8px;\n  background: white;\n  border: 1px solid #ccc;\n`;\n\nconst IncrementButton = styled.button`\n  width: 24px;\n  border-top-right-radius: 4px;\n  border-bottom-right-radius: 4px;\n  border: 0;\n  cursor: pointer;\n  transition: 0.3s ease;\n\n  &:hover {\n    background: #6200ee;\n    color: white;\n  }\n`;\n\ntype NumberInputProps = {\n  value: number;\n  onValueChange?: (num: number) => void;\n};\nexport default function NumberInput(props: NumberInputProps) {\n  const { value, onValueChange } = props;\n  const [currentValue, setCurrentValue] = useState<number>(value);\n\n  useEffect(() => {\n    setCurrentValue(value);\n  }, [value]);\n\n  useEffect(() => {\n    onValueChange && onValueChange(currentValue);\n  }, [onValueChange, currentValue]);\n\n  const increment = (e: any) => {\n    e.stopPropagation();\n    e.preventDefault();\n    setCurrentValue(currentValue + 1);\n  };\n  const decrease = (e: any) => {\n    e.stopPropagation();\n    e.preventDefault();\n    setCurrentValue(currentValue - 1);\n  };\n\n  return (\n    <Container>\n      <DecrementButton onClick={decrease}>-</DecrementButton>\n      <Label>{currentValue}</Label>\n      <IncrementButton onClick={increment}>+</IncrementButton>\n    </Container>\n  );\n}\n","import React, { useState } from \"react\";\nimport { IconButton, Menu, MenuSurfaceAnchor, Typography } from \"rmwc\";\nimport styled from \"styled-components\";\nimport { Restaurant } from \"../../types\";\nimport NumberInput from \"../NumberInput\";\n\ntype MapPinProps = {\n  restaurant: Restaurant;\n  lat: number;\n  lng: number;\n  onDirectionClick: (restaurant: Restaurant) => void;\n  onVisitChange?: (visits: number, placeId: string) => void;\n};\n\nconst Container = styled.div`\n  margin-left: -24px;\n  margin-top: -36px;\n`;\n\nconst TextContainer = styled.div`\n  width: 250px;\n  background: white;\n  border-radius: 3px;\n  padding: 8px;\n`;\n\nconst MenuHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: stretch;\n`;\n\nconst VisitContainer = styled.div`\n  display: flex;\n  flex-direction: row-reverse;\n  align-items: center;\n`;\n\nexport function MapPin(props: MapPinProps) {\n  const { restaurant, onDirectionClick, onVisitChange } = props;\n\n  const [menu, setMenu] = useState<boolean>(false);\n  return (\n    <Container\n      onClick={(e) => {\n        e.stopPropagation();\n      }}\n    >\n      <MenuSurfaceAnchor>\n        <Menu open={menu} onClose={() => setMenu(false)}>\n          <TextContainer>\n            <MenuHeader>\n              <Typography use=\"headline6\">{restaurant.name}</Typography>\n              <div style={{ flex: 1 }} />\n              <IconButton\n                icon=\"assistant_direction\"\n                onClick={() => {\n                  onDirectionClick(restaurant);\n                  setMenu(false);\n                }}\n              />\n              <IconButton icon=\"close\" onClick={() => setMenu(false)} />\n            </MenuHeader>\n            <VisitContainer>\n              <NumberInput\n                value={restaurant.visits || 0}\n                onValueChange={(visits: number) => {\n                  if (onVisitChange) {\n                    return onVisitChange(visits, restaurant.placeId);\n                  }\n                }}\n              />\n              <Typography use=\"subtitle2\" style={{ marginRight: 8 }}>\n                Visits:{\" \"}\n              </Typography>\n            </VisitContainer>\n            <hr />\n            {restaurant.specialties && restaurant.specialties.length > 0 && (\n              <>\n                <Typography use=\"subtitle2\">\n                  Specialty: {restaurant.specialties.join(\", \")}\n                </Typography>\n                <br />\n              </>\n            )}\n\n            <Typography use=\"caption\" style={{ paddingTop: 16 }}>\n              {restaurant.address}\n            </Typography>\n          </TextContainer>\n        </Menu>\n        <IconButton\n          icon=\"place\"\n          style={{ color: \"#ea4335\" }}\n          onClick={(e) => {\n            e.stopPropagation();\n            setMenu(!menu);\n          }}\n        />\n      </MenuSurfaceAnchor>\n    </Container>\n  );\n}\n","import { Maps } from \"./maps\";\n\nexport default function Dashboard() {\n  return <Maps />;\n}\n","import Dashboard from \"./components/Dashboard\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Dashboard />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport \"rmwc/dist/styles\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}